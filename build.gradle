plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'br.com'
version = '1.3.0-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.2.1.RELEASE'
	implementation 'org.flywaydb:flyway-core'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.2'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}


test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"br/com/contabil/entity",
					"br/com/contabil/dto",
					"br/com/contabil/repository",
					"br/com/contabil/controller",
					"br/com/contabil/ContabilApplication.class",
					"**/config/*"
			])
		}))
	}
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacoco')
	}
}

jar {
	manifest {
		attributes 'Main-Class': 'br.com.contabil.ContabilApplication'
	}
}